
#Использовать 1commands
#Использовать logos
#Использовать cli

Процедура ВыполнитьПриложение()
	
	Приложение = Новый КонсольноеПриложение(
		"repo_init",
		"Приложение для начального клонирования репозитория git",
		ЭтотОбъект);
	
	Приложение.Версия("version", "1.0.0");
	
	Приложение.Аргумент("DIR", "", "Имя каталога репозитория.")
		.ТСтрока()
		.ВОкружении("IREPO_STORAGE_PATH");
	
	Приложение.Аргумент("REPO", "", "Путь репозитория для клонирования.")
		.ТСтрока()
		.ВОкружении("IREPO_REPO");
	
	Приложение.Аргумент("WORKDIR", "", "Рабочий каталог для загрузки репозиториев")
		.ТСтрока()
		.ВОкружении("IREPO_WORKDIR")
		.Обязательный(Ложь)
		.ПоУмолчанию(ТекущийКаталог());
	
	Приложение.Запустить(АргументыКоманднойСтроки);
	
КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	ИмяКаталогаПроекта = КомандаПриложения.ЗначениеАргумента("DIR");
	РепозиторийПроекта = КомандаПриложения.ЗначениеАргумента("REPO");
	КаталогПроектов = КомандаПриложения.ЗначениеАргумента("WORKDIR");
	
	ПутьККаталогуПроекта = ОбъединитьПути(КаталогПроектов, ИмяКаталогаПроекта);
	
	КаталогПроекта = Новый Файл(ПутьККаталогуПроекта);
	Если НЕ КаталогПроекта.Существует() Тогда
		
		Сообщить("запуск git clone");
		
		КомандаClone = Новый Команда;
		КомандаClone.УстановитьРабочийКаталог(КаталогПроектов);
		КомандаClone.УстановитьКоманду("git");
		КомандаClone.ДобавитьПараметр("clone");
		КомандаClone.ДобавитьПараметр(РепозиторийПроекта);
		КомандаClone.ДобавитьПараметр(ИмяКаталогаПроекта);
		
		КодВозврата = КомандаClone.Исполнить();
		Если КодВозврата <> 0 Тогда
			ВызватьИсключение "Ошибка клонирования репо: " + КомандаClone.ПолучитьВывод();
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ КаталогПроекта.Существует() Тогда
		ВызватьИсключение "Не удалось инициализировать каталог проекта";
	КонецЕсли;
	
	Если НЕ КаталогПроекта.ЭтоКаталог() Тогда
		ВызватьИсключение "Ошибка создания каталога проекта";
	КонецЕсли;
	
КонецПроцедуры

Попытка
	
	ВыполнитьПриложение();
	
Исключение
	
	Сообщить("Критичная ошибка: " + ОписаниеОшибки());
	ЗавершитьРаботу(1);
	
КонецПопытки;
